policy_module(xephyr, 1.00)


gen_require(`
	type bin_t;
	type shell_exec_t;
	type user_devpts_t;
	type xdm_tmp_t;
	type xserver_t;
')


########################################
#
# Declarations
#

## <desc>
##	<p>
##	Allow xephyr to create and use shared memory.
##	xshm is needed for e.g. qt4 raster engine.
##	</p>
## </desc>
gen_tunable(xephyr_xshm, false)

type xephyr_t;
type xephyr_exec_t;
userdom_user_application_domain(xephyr_t, xephyr_exec_t)

type xephyr_tmp_t;
userdom_user_tmp_file(xephyr_tmp_t)

type xephyr_tmpfs_t;
userdom_user_tmpfs_file(xephyr_tmpfs_t)


########################################
#
# Local policy
#

allow xephyr_t self : fifo_file rw_fifo_file_perms;

corecmd_search_bin(xephyr_t)
corecmd_read_bin_symlinks(xephyr_t)
can_exec(xephyr_t, bin_t)
can_exec(xephyr_t, shell_exec_t)

allow xephyr_t user_devpts_t : chr_file rw_chr_file_perms;

xserver_read_user_xauth(xephyr_t);

files_tmp_filetrans(xephyr_t, xephyr_tmp_t, file)
allow xephyr_t xephyr_tmp_t : file manage_file_perms;

filetrans_pattern(xephyr_t, xdm_tmp_t, xephyr_tmp_t, sock_file)
allow xephyr_t xephyr_tmp_t : sock_file { create_sock_file_perms delete_sock_file_perms };

xserver_stream_connect(xephyr_t);

miscfiles_read_fonts(xephyr_t);

miscfiles_read_localization(xephyr_t);

files_read_usr_files(xephyr_t)

tunable_policy(`xephyr_xshm',`
	allow xephyr_t self : shm create_shm_perms;
	fs_tmpfs_filetrans(xephyr_t, xephyr_tmpfs_t, file)
	allow { xephyr_t xserver_t } xephyr_tmpfs_t : file { read write };
	allow xserver_t xephyr_t : shm { unix_read read getattr associate unix_write write };
')
