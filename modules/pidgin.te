policy_module(pidgin, 1.00)


gen_require(`
	type system_dbusd_var_lib_t;
#	type user_devpts_t;
')


########################################
#
# Declarations
#

## <desc>
##	<p>
##	Allow pidgin to communicate via clearnet.
##	<p>
## <desc>
gen_tunable(pidgin_connect_clearnet, true)

## <desc>
##	<p>
##	Allow pidgin to communicate via dbus IPC.
##	</p>
## </desc>
gen_tunable(pidgin_dbus, false)

## <desc>
##	<p>
##	Allow pidgin to read user content files.
##	</p>
## </desc>
gen_tunable(pidgin_read_user_content_files, false)

## <desc>
##	<p>
##	Allow pidgin to read all config in HOME
##	</p>
## </desc>
gen_tunable(pidgin_read_generic_config, false)

## <desc>
##	<p>
##	Allow pidgin to read /dev/random. Doing so is required for OTR.
##	</p>
## </desc>
gen_tunable(pidgin_rand, false)

## <desc>
##	<p>
##	Allow pidgin to connect via tor.
##	</p>
## </desc>
gen_tunable(pidgin_tor, false)

## <desc>
##	<p>
##	Allow pidgin to connect to all unreserved ports.
##	<p>
## <desc>
gen_tunable(pidgin_connect_all_unreserved, false)

## <desc>
##	<p>
##	Allow pidgin to save settings. Disable to prevent pidgin from writing
##	to HOME.
##	</p>
## </desc>
gen_tunable(pidgin_write_to_home, true)


type pidgin_t;
type pidgin_exec_t;
userdom_user_application_domain(pidgin_t, pidgin_exec_t)

type pidgin_tmp_t;
userdom_user_tmp_file(pidgin_tmp_t)

# These could be shared with finch.
#
type purple_home_t;
userdom_user_home_content(purple_home_t)

type purple_data_t;
files_type(purple_data_t)

########################################
#
# Local policy
#

allow pidgin_t self : fifo_file rw_fifo_file_perms;
dontaudit pidgin_t self : shm create;

fs_dontaudit_getattr_xattr_fs(pidgin_t)

#allow pidgin_t user_devpts_t : chr_file rw_chr_file_perms;

dev_read_urand(pidgin_t)

auth_use_nsswitch(pidgin_t)

miscfiles_read_generic_certs(pidgin_t)

xserver_read_user_xauth(pidgin_t)

# pidgin has yet to convert to XDG
#
userdom_home_filetrans_user_home_dir(purple_home_t, ".purple")

kernel_dontaudit_search_sysctl(pidgin_t)

userdom_user_tmp_filetrans(pidgin_t, pidgin_tmp_t, dir)

files_read_usr_files(pidgin_t)

miscfiles_read_fonts(pidgin_t)

miscfiles_read_localization(pidgin_t)

list_dirs_pattern(pidgin_t, purple_data_t, purple_data_t)
read_files_pattern(pidgin_t, purple_data_t, purple_data_t)

allow pidgin_t self : tcp_socket { create ioctl };


# Throws a syntax error as a boolean...
#
#tunable_policy(`pidgin_connect_clearnet',`

	sysnet_dns_name_resolve(pidgin_t)
#')

tunable_policy(`pidgin_connect_clearnet',`

	corenet_tcp_connect_jabber_client_port(pidgin_t)
')

tunable_policy(`pidgin_dbus',`
#
# todo: grin and bear dbus for this purpose
#
	files_search_var_lib(pidgin_t)
	read_lnk_files_pattern(pidgin_t, system_dbusd_var_lib_t, system_dbusd_var_lib_t)
')

tunable_policy(`pidgin_read_user_content_files',`

	userdom_list_user_home_dirs(pidgin_t)
	userdom_list_user_home_content(pidgin_t)
	userdom_read_user_home_content_files(pidgin_t)
')

tunable_policy(`pidgin_read_generic_config',`

	xdg_read_cache_home_files(pidgin_t)
	xdg_read_config_home_files(pidgin_t)
	xdg_read_data_home_files(pidgin_t)
')

tunable_policy(`pidgin_rand',`

	dev_read_rand(pidgin_t)
')

tunable_policy(`pidgin_tor',`

	corenet_tcp_connect_tor_port(pidgin_t)
')

tunable_policy(`pidgin_connect_all_unreserved',`

	corenet_tcp_connect_all_unreserved_ports(pidgin_t)
')

tunable_policy(`pidgin_write_to_home',`

	create_dirs_pattern(pidgin_t, user_home_dir_t, purple_home_t)
	manage_files_pattern(pidgin_t, purple_home_t, purple_home_t)
')


optional_policy(`

	xephyr_domain_constrain_template(pidgin)

#
# Here be local types defined in local modules
#
	miscfiles_read_gtk_etc(pidgin_t)
	miscfiles_read_pango_etc(pidgin_t)

	userdom_append_user_spelldict(pidgin_t)
	userdom_read_gtk_config(pidgin_t)
	userdom_read_icons_home(pidgin_t)
	userdom_read_user_mime(pidgin_t)
	userdom_read_user_spelldict(pidgin_t)
	userdom_read_user_themes(pidgin_t)

	znc_port_connect(pidgin_t)
')
